import asyncio
from src.agent_base import BaseCryptoAgent
from src.moralis_agent import MoralisAgent
from src.taapi_agent import TAAPIAgent
from src.news_agent import NewsAgent

class OrchestratorAgent(BaseCryptoAgent):
    """–ê–≥–µ–Ω—Ç-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –¥–µ–ª–∞–µ—Ç –∞–Ω–∞–ª–∏–∑"""

    async def run(self, token_info: dict):
        print(f"üöÄ OrchestratorAgent –∑–∞–ø—É—â–µ–Ω –¥–ª—è {token_info['symbol']} ({token_info['token_address']})...")

        # –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–æ–≤ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –¥–∞–Ω–Ω—ã—Ö
        moralis_agent = MoralisAgent(name="MoralisAgent", token_info=token_info)
        taapi_agent = TAAPIAgent(name="TAAPIAgent", symbol=token_info["symbol"])
        news_agent = NewsAgent(name="NewsAgent", symbol=token_info["symbol"])

        moralis_result = await moralis_agent.run()
        taapi_result = await taapi_agent.run()
        news_result = await news_agent.run()

        # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
        usd_price = float(moralis_result.get("usd_price", 0))
        rsi = float(taapi_result.get("rsi", 50))

        # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è (–º–æ–∂–Ω–æ —É—Å–ª–æ–∂–Ω–∏—Ç—å)
        action = "BUY" if usd_price < 1 and rsi < 30 else "HOLD"

        final_report = {
            "orchestrator": self.name,
            "moralis_analysis": moralis_result,
            "taapi_analysis": taapi_result,
            "news_analysis": news_result,
            "recommended_action": action,
        }

        print(f"üìä OrchestratorAgent Final Report: {final_report}")
        return final_report
